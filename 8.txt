from sklearn.model_selection import train_test_split
from sklearn.neighbors import KNeighborsClassifier
from sklearn import datasets
from sklearn import metrics

iris=datasets.load_iris()
print("Iris dataset is loaded...")
x_train,x_test,y_train,y_test=train_test_split(iris.data,iris.target,random_state=60,test_size=0.1)
print("Dataset is divided into training and testing samples")
print("Size of training data and its label",x_train.shape,y_train.shape)
print("Size of testing data and its label",x_test.shape,y_test.shape)

for i in range(len(iris.target_names)):
    print("Label",i,"-",str(iris.target_names[i]))
    
classifier=KNeighborsClassifier(n_neighbors=1)
classifier.fit(x_train,y_train)
y_pred=classifier.predict(x_test)

print("Result of classification using KNN with k=1")
print("\n-----------------------------------------")
print('%-25s %-25s %-25s' %('Original label','predicted label','correct/wrong'))
print("-------------------------------------------")

for r in range(0,len(x_test)):
    print('%-25s %-25s' %(y_test[r],y_pred[r]),end="")
    if(y_test[r]==y_pred[r]):
        print('%-25s'%('correct'))
    else:
        print('%-25s'%('wrong'))
print("\n confusion matrix:",metrics.confusion_matrix(y_test,y_pred))
print("\n classification accuracy:",metrics.accuracy_score(y_test,y_pred));