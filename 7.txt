import matplotlib.pyplot as plt
import pandas as pd
import numpy as np
from sklearn import preprocessing 
from sklearn.cluster import KMeans
from sklearn.mixture import GaussianMixture
import sklearn.metrics as sm

iris_dataset=pd.read_csv('iris.csv')
iris_dataset ['Targets'] = iris_dataset.Class.map({'Iris-setosa': 0,'Iris-versicolor':1, 'Iris-virginica': 2})
X=iris_dataset [['Sepal_Length','Sepal_Width','Petal_Length','Petal_Width']]
Y= iris_dataset [['Targets']] 

model=KMeans (n_clusters=3)
model.fit(X)
scaler=preprocessing.StandardScaler()
scaler.fit(X)
xs=scaler.transform(X)

gnm=GaussianMixture(n_components=3)
gnm.fit(xs)
Y_gnm=gnm.predict(xs) 

plt.figure(figsize=(10,10))
colormap=np.array(['red','lime','black'])

plt.subplot(2,2,1) 
plt.scatter(X.Petal_Length,X.Petal_Width,c=colormap[Y.Targets],s=40) 
plt.title('Real Classification') 
plt.xlabel('Petal Length') 
plt.ylabel('Petel Width') 

plt.subplot(2,2,2) 
plt.scatter(X.Petal_Length,X.Petal_Width,c=colormap[model.labels_],s=40) 
plt.title('kMeans Clustering') 
plt.xlabel('Petal Length') 
plt.ylabel('Petal Width') 

plt.subplot(2,2,3) 
plt.scatter(X.Petal_Length,X.Petal_Width,c=colormap[Y_gnm],s=40) 
plt.title('GNM clustering') 
plt.xlabel('Petal Length') 
plt.ylabel('Petal Width') 

print('Evaluation of K-Means with ground truth Classification of Iris Dataset:')
print('Rand Index:',sm.adjusted_rand_score(Y.Targets,model.labels_))
print('Homogeneity score:',sm.homogeneity_score(Y.Targets,model.labels_))
print('Completeness score:',sm.completeness_score(Y.Targets,model.labels_))
print('V-Measure:',sm.v_measure_score(Y.Targets,model.labels_))

print('\n\nEvaluation of K-Means with ground truth Classification of Iris Dataset:')
print('Rand Index:',sm.adjusted_rand_score(Y.Targets,Y_gnm))
print('Homogeneity score:',sm.homogeneity_score(Y.Targets,Y_gnm))
print('Completeness score:',sm.completeness_score(Y.Targets,Y_gnm))
print('V-Measure:',sm.v_measure_score(Y.Targets,Y_gnm))
plt.show()